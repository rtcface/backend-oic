# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserRegisterdto {
  id: ID
  name: String
  email: String
  password: String
  charge: String
  phone: String
  createdAt: DateTime
  status: String
  avatar: String
  role: String
  createByGoogle: Boolean
  firstSignIn: Boolean
  ente_publico: String
  colaboradores: [ID!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserRegisterdtoOutput {
  id: ID
  name: String
  email: String
  charge: String
  phone: String
  createdAt: DateTime
  status: String
  avatar: String
  role: String
  createByGoogle: Boolean
  firstSignIn: Boolean
  children: [UserRegisterdtoOutput!]
  label: String
  type: String!
  styleClass: String!
  expanded: Boolean!
  data: UserRegisterdtoOutput
}

type UserTokenDto {
  haveError: Boolean!
  Err: String!
  token: String!
  user: UserRegisterdto!
}

type MenuRegisterdto {
  id: ID!
  label: String!
  icon: String!
  routerLink: String!
  role: String!
  status: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PlanWorkRegisterDto {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  ente_publico: String!
  children: [ID!]!
}

type PlanWorkRegisterDtoOutput {
  id: ID
  label: String
  data: String
  expandedIcon: String
  collapsedIcon: String
  createdAt: DateTime
  updatedAt: DateTime
  status: String
  ente_publico: String
  children: [PlanWorkParentRegisterDtoOutput!]
}

type PlanWorkUpdateDto {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  ente_publico: String!
}

type PlanWorkParentQueryDto {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  children: [ID!]!
}

type PlanWorkParentRegisterDto {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  children: [ID!]!
}

type PlanWorkParentRegisterDtoOutput {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  children: [PlanWorkChildRegisterDto!]!
}

type PlanWorkParentUpdateDto {
  id: ID!
  label: String!
  data: String!
  expandedIcon: String!
  collapsedIcon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type PlanWorkChildRegisterDto {
  id: ID!
  label: String!
  data: String!
  url: String!
  icon: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type KpisRegisterDto {
  id: ID!
  kpi: String!
  description: String!
  total_casos: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
  ente_publico: String
}

type KpisQueryDto {
  id: ID
  kpi: String
  description: String
  total_casos: Float
  createdAt: DateTime
  updatedAt: DateTime!
  status: String
  ente_publico: String
}

type EnteQueryDto {
  id: ID!
  nombre_ente: String!
  siglas_ente: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type EnteRegisterDto {
  id: ID!
  nombre_ente: String!
  siglas_ente: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type EnteUpdateDto {
  id: ID!
  nombre_ente: String!
  siglas_ente: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type EnteDeleteDto {
  id: ID!
  nombre_ente: String!
  siglas_ente: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type CodeEthicsRegisterDto {
  id: ID!
  description: String!
  url: String!
  ente_publico: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

type EthicsCommitteRegisterdto {
  id: ID
  name: String
  email: String
  charge: String
  phone: String
  createdAt: DateTime
  status: String
  avatar: String
  role: String
  ente_publico: String
  colaboradores: [ID!]
}

type EthicsCommittedtoOutput {
  id: ID
  name: String
  email: String
  charge: String
  phone: String
  createdAt: DateTime
  status: String
  avatar: String
  role: String
  children: [EthicsCommittedtoOutput!]
  label: String
  type: String!
  styleClass: String!
  expanded: Boolean!
  data: EthicsCommittedtoOutput
}

type IntegrityRulesRegisterdto {
  id: ID
  description: String
  order: Float
  status: String
}

type IntegrityRulesHistorydto {
  id: ID
  ente_publico: String
  status: String
  p1: Boolean
  p2: Boolean
  p3: Boolean
  p4: Boolean
  p5: Boolean
  p6: Boolean
  p7: Boolean
  p8: Boolean
  p9: Boolean
  p10: Boolean
  p11: Boolean
  p12: Boolean
  p13: Boolean
  p14: Boolean
  p15: Boolean
  p16: Boolean
}

type Query {
  verify_authentication(token: String!): UserTokenDto!
  getUsers: [UserRegisterdto!]!
  getUser(id: String!): UserRegisterdto!
  getColaboresTreeData(input: UserColaboradoresQueryInput!): UserRegisterdtoOutput!
  items(role: String!): [MenuRegisterdto!]!
  getMenuByType(input: MenuQueryInput!): [MenuRegisterdto!]!
  getPlanRootWorks: [PlanWorkRegisterDto!]!
  getPlanRootWorkById(id: String!): PlanWorkRegisterDto!
  getPlanWorkParents: [PlanWorkParentQueryDto!]!
  getPlanWorkParentById(id: String!): [PlanWorkParentQueryDto!]!
  getPlanWorksChild: [PlanWorkChildRegisterDto!]!
  getPlanWorkChildById(id: String!): [PlanWorkChildRegisterDto!]!
  getPlanWorkData(input: PlanWorkQueryInput!): PlanWorkRegisterDtoOutput!
  getKpis: [KpisQueryDto!]!
  getKpisById(id: String!): KpisQueryDto!
  getKpisByEnte(input: KpisByEnteQueryInput!): [KpisQueryDto!]!
  getEnte: [EnteQueryDto!]!
  getEnteById(id: String!): EnteQueryDto!
  getEnteBySiglas(siglas: String!): EnteQueryDto!
  getEnteByName(name: String!): [EnteQueryDto!]!
  getCodeEthics: [CodeEthicsRegisterDto!]!
  getCodeEthicsById(id: String!): CodeEthicsRegisterDto!
  getCommitteMembesTreeData(input: CommitteColaboradoresQueryInput!): EthicsCommittedtoOutput!
  getIntegrityRules: [IntegrityRulesRegisterdto!]!
  getHistoryIntegrityRulesByEnte(input: HistoryRuleByEnteInput!): [IntegrityRulesHistorydto!]!
}

input UserColaboradoresQueryInput {
  boss: String
  ente: String
}

input MenuQueryInput {
  role: String!
  portal: String!
}

input PlanWorkQueryInput {
  ente_publico: String!
}

input KpisByEnteQueryInput {
  ente_publico: String!
}

input CommitteColaboradoresQueryInput {
  boss: String
  ente: String
}

input HistoryRuleByEnteInput {
  ente_publico: String!
  status: String
}

type Mutation {
  register(input: UserRegisterInput!): UserTokenDto!
  registerContralor(input: UserContralorRegisterInput!): UserTokenDto!
  registerAdmin(input: UserAdminRegisterInput!): UserTokenDto!
  registerColaborador(input: UserColaboradorRegisterInput!): UserTokenDto!
  login(input: LoginAuthInput!): UserTokenDto!
  changePassword(input: UserChangePassInput!): UserTokenDto!
  refreshToken(refreshToken: String!): UserTokenDto!
  updateUser(input: UserUpdateInput!): UserRegisterdto!
  updateColaborador(input: UserUpdateColaboradorInput!): UserTokenDto!
  inactivateUser(input: UserDeleteInput!): UserRegisterdto!
  addItemMenu(input: MenuRegisterInput!): MenuRegisterdto!
  addPlanRootWork(input: PlanWorkRegisterInput!): PlanWorkRegisterDto!
  updatePlanRootWork(input: PlanWorkRegisterInput!, id: String!): PlanWorkRegisterDto!
  updatePlanWork(input: PlanWorkUpdate!): PlanWorkUpdateDto!
  addPlanWorkParent(input: PlanWorkParentRegisterInput!): PlanWorkParentRegisterDto!
  updatePlanWorkParent(input: PlanWorkParentRegisterInput!, id: String!): PlanWorkParentUpdateDto!
  addPlanWorkChild(input: PlanWorkChildRegisterInput!): PlanWorkChildRegisterDto!
  inactivatePlanWork(input: PlanWorkDeleteInput!): PlanWorkUpdateDto!
  updatePlanWorkChild(input: PlanWorkChildUpdate!): PlanWorkUpdateDto!
  addKpis(input: KpisRegisterInput!): KpisRegisterDto!
  insertManyKpis(data: [KpisRegisterInput!]!): [KpisRegisterDto!]!
  updateKpis(input: KpisUpdateInput!, id: String!): KpisRegisterDto!
  inactivateKpi(id: String!): KpisRegisterDto!
  addEnte(input: EnterRegisterInput!): EnteRegisterDto!
  insertManyEnte(data: [EnterRegisterInput!]!): [EnteRegisterDto!]!
  updateEnte(input: EnteUpdateInput!, id: String!): EnteUpdateDto!
  deleteEnte(id: String!): EnteDeleteDto!
  addCodeEthics(input: CodeEthicsRegisterInput!): CodeEthicsRegisterDto!
  updateCodeEthics(input: CodeEthicsUpdateInput!): CodeEthicsRegisterDto!
  registerPresident(input: EthicsCommitteRegisterInput!): EthicsCommitteRegisterdto!
  registerMember(input: EthicsCommitteMemberRegisterInput!): EthicsCommitteRegisterdto!
  addIntegrityRule(input: IntegrityRuleRegisterInput!): IntegrityRulesRegisterdto!
  registerHistoryRules(input: IntegrityRuleHistoryInput!): IntegrityRulesHistorydto!
  updateHistoryRules(input: IntegrityRuleHistoryUpdateInput!): IntegrityRulesHistorydto!
}

input UserRegisterInput {
  name: String!
  email: String!
  password: String!
}

input UserContralorRegisterInput {
  name: String!
  email: String!
  ente_publico: String!
}

input UserAdminRegisterInput {
  name: String!
  email: String!
}

input UserColaboradorRegisterInput {
  name: String!
  email: String!
  charge: String!
  phone: String!
  parentId: String!
}

input LoginAuthInput {
  email: String!
  password: String!
}

input UserChangePassInput {
  email: String!
  password: String!
  newPassword: String!
}

input UserUpdateInput {
  id: String!
  name: String!
  email: String!
  password: String!
  avatar: String!
  status: String!
  role: String!
  phone: String!
  charge: String!
}

input UserUpdateColaboradorInput {
  id: String!
  name: String!
  email: String!
  charge: String!
  phone: String!
}

input UserDeleteInput {
  id: String!
}

input MenuRegisterInput {
  label: String!
  icon: String!
  routerLink: String!
  role: String!
  portal: String!
  order: Float!
}

input PlanWorkRegisterInput {
  label: String!
  data: String!
  ente_publico: String!
}

input PlanWorkUpdate {
  id: ID!
  children: [ID!]!
}

input PlanWorkParentRegisterInput {
  IdRoot: String!
  label: String!
  data: String!
}

input PlanWorkChildRegisterInput {
  IdParent: String!
  label: String!
  data: String!
  url: String!
}

input PlanWorkDeleteInput {
  id: ID!
}

input PlanWorkChildUpdate {
  id: ID!
  label: String!
  data: String!
  url: String!
}

input KpisRegisterInput {
  kpi: String!
  description: String!
  total_casos: Float!
  ente_publico: String!
}

input KpisUpdateInput {
  id: ID!
  kpi: String!
  description: String!
  total_casos: Float!
  updatedAt: DateTime!
}

input EnterRegisterInput {
  nombre_ente: String!
  siglas_ente: String!
}

input EnteUpdateInput {
  id: ID!
  nombre_ente: String!
  siglas_ente: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: String!
}

input CodeEthicsRegisterInput {
  description: String!
  url: String!
  ente_publico: String!
}

input CodeEthicsUpdateInput {
  id: ID!
  description: String!
  url: String!
}

input EthicsCommitteRegisterInput {
  name: String!
  email: String!
  phone: String!
  avatar: String!
  ente_publico: String!
}

input EthicsCommitteMemberRegisterInput {
  name: String!
  email: String!
  phone: String!
  avatar: String
  charge: String!
  parentId: String!
}

input IntegrityRuleRegisterInput {
  description: String!
  order: Float!
}

input IntegrityRuleHistoryInput {
  ente_publico: String!
  p1: Boolean
  p2: Boolean
  p3: Boolean
  p4: Boolean
  p5: Boolean
  p6: Boolean
  p7: Boolean
  p8: Boolean
  p9: Boolean
  p10: Boolean
  p11: Boolean
  p12: Boolean
  p13: Boolean
  p14: Boolean
  p15: Boolean
  p16: Boolean
}

input IntegrityRuleHistoryUpdateInput {
  id: String!
  p1: Boolean
  p2: Boolean
  p3: Boolean
  p4: Boolean
  p5: Boolean
  p6: Boolean
  p7: Boolean
  p8: Boolean
  p9: Boolean
  p10: Boolean
  p11: Boolean
  p12: Boolean
  p13: Boolean
  p14: Boolean
  p15: Boolean
  p16: Boolean
}
